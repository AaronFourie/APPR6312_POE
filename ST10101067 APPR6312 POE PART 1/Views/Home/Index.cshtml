@{
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model ST10101067_APPR6312_POE_PART_2.Models.IncomingDataModel;


    <img class="w-100 h-100" src="~/images/Home.png" alt="" style="background-size: cover;
            background-repeat: no-repeat"/>


<img class="w-100 h-100" src="~/images/AboutUs.png" alt="" style="background-size: cover;
            background-repeat: no-repeat"/>

<img class="w-100 h-100" src="~/images/Philosophy.png" alt="" style="background-size: cover;
            background-repeat: no-repeat" />
<div class="container bg-black" style=" padding:70px 0px 70px 0; margin-top: -10rem; border-radius:70px">
    <div class="row">
        <div class="col-md-4">
            <div class="p-4 text-center">
                <a class="btn btn-outline-light bg-orange" style="font-size:2rem; border-radius:12px" asp-area="" asp-controller="UserDisasters" asp-action="Create">Log a Disaster</a>
            </div>
        </div>
        <div class="col-md-4">
            <div class=" p-4 text-center">
                <a class="btn btn-outline-light bg-orange" style="font-size:2rem; ; border-radius:12px" asp-area="" asp-controller="UserGoodsDonations" asp-action="Create">Donate Goods</a>
            </div>
        </div>
        <div class="col-md-4">
            <div class="p-4 text-center">
                <a class="btn btn-outline-light bg-orange" style="font-size:2rem; border-radius:12px" asp-area="" asp-controller="UserMoneyDonations" asp-action="Create">Donate Money</a>
            </div>
        </div>
    </div>
</div>
<div class="container">
    @{
        int totalItemCount = 0;
        int totalMoneyCount = 0;
        string totalMoneyAmount = ""; // Initialize total money amount

        if (Model != null && Model.GoodsDonations != null)
        {
            foreach (var goodsDonation in Model.GoodsDonations)
            {
                totalItemCount += goodsDonation.ITEM_COUNT;
            }
        }

        if (Model != null && Model.MoneyDonations != null)
        {
            HashSet<int> uniqueMoneyDonationIds = new HashSet<int>(Model.MoneyDonations.Select(m => m.MONEY_DONATION_ID));
            totalMoneyCount = uniqueMoneyDonationIds.Count;

            // Calculate total money amount donated
            totalMoneyAmount = "R " + Model.MoneyDonations.Sum(m => m.AMOUNT).ToString();
        }
    }
    <br />
    <br />
    <br />
    <h1>Total Money Donations Recieved</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Total Number of Donations Recieved</th>
                <th>Total Amount of Donations Revieved</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@totalMoneyCount</td>
                <td>@totalMoneyAmount</td>
            </tr>          
        </tbody>

    </table>


    <h1>Total Number of Goods Recieved</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Total Goods Count</th>

            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@totalItemCount</td>
            </tr>
        </tbody>
    </table>


    <h1>Currently Active Disasters</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Location</th>
                <th>Aid Type</th>
                <th>Money Allocated</th>
                <th>Goods Allocated</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var disaster in Model.Disasters.Where(d => d.IsActive == 1))
            {
                <tr>
                    <td>@disaster.DISTATER_ID</td>
                    <td>@disaster.STARTDATE</td>
                    <td>@disaster.ENDDATE</td>
                    <td>@disaster.LOCATION</td>
                    <td>@disaster.AID_TYPE</td>
                    <td>
                        @{
                            string moneyAllocated = "";
                            // Calculate money allocated to this disaster if Model.MoneyAllocations is not null
                            double moneyAllocatedValue = Model.MoneyAllocations != null
                            ? Model.MoneyAllocations
                            .Where(m => m.AidType == disaster.AID_TYPE)
                            .Sum(m => (double)m.AllocationAmount)
                            : 0; // Assign default value if Model.MoneyAllocations is null

                            moneyAllocated = "R " + moneyAllocatedValue.ToString("N2"); // Format double to Rands (rounded to 2 decimal places)
                        }
                        @moneyAllocated
                    </td>
                    <td>
                        @{
                            // Calculate goods allocated to this disaster if Model.GoodsAllocations is not null
                            int goodsAllocated = Model.GoodsAllocations != null
                            ? Model.GoodsAllocations
                            .Where(g => g.AidType == disaster.AID_TYPE)
                            .Sum(g => g.ITEM_COUNT)
                            : 0; // Assign default value if Model.GoodsAllocations is null
                        }
                        @goodsAllocated
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Centered content within the full-screen image -->

@if (SignInManager.IsSignedIn(User))
{
   <div class="container-fluid" style="margin: 10rem auto 5rem auto">
        <h1 class="text-black text-center" style="font-size: 70px; font-weight:bold">LATEST STATISTICS</h1>
   </div>
   
    <br />

    <br />
     <div class="container">

    <h1>Incoming Goods Donations</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Donation Date</th>
                <th>Number of Items</th>
                <th>Category</th>
                <th>Description</th>
                <th>Donor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var goodsDonation in Model.GoodsDonations)
            {
                <tr>
                    <td>@goodsDonation.GOODS_DONATION_ID</td>
                    <td>@goodsDonation.DATE</td>
                    <td>@goodsDonation.ITEM_COUNT</td>
                    <td>@goodsDonation.CATEGORY</td>
                    <td>@goodsDonation.DESCRIPTION</td>
                    <td>@goodsDonation.DONOR</td>
                </tr>
            }
        </tbody>
    </table>

    <h1>Incoming Money Donations</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Date</th>
                <th>Amount</th>
                <th>Donor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var moneyDonation in Model.MoneyDonations)
            {
                <tr>
                    <td>@moneyDonation.MONEY_DONATION_ID</td>
                    <td>@moneyDonation.DATE</td>
                    <td>@moneyDonation.AMOUNT</td>
                    <td>@moneyDonation.DONOR</td>
                </tr>
            }
        </tbody>
    </table>
    

     <h1>Incoming Disasters</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>Start date</th>
                <th>End date</th>
                <th>Location</th>
                <th>Aid Type</th>
                <th>Is Active</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var disaster in Model.Disasters)
            {
                <tr>
                    <td>@disaster.DISTATER_ID</td>
                    <td>@disaster.USERNAME</td>
                    <td>@disaster.STARTDATE</td>
                    <td>@disaster.ENDDATE</td>
                    <td>@disaster.LOCATION</td>
                    <td>@disaster.AID_TYPE</td>
                    <td>@disaster.IsActive</td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}

